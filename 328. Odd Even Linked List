/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if ( head==NULL || head->next==NULL)  return head;
        
        int count=0;
        ListNode * temp= head,*os=NULL,*oe=NULL,*es=NULL,*ee=NULL;
        while( temp)
        {
            count++;
            if (count%2!=0)
            {
                if (os == NULL)
                {
                    os=temp;
                    oe=temp;
                }
                else
                {
                    oe->next= temp;
                    oe= temp;
                }
                
            }
            else
            {
                if (es==NULL)
                {
                    es=temp;
                    ee=temp;
                }
                else
                {
                    ee->next= temp;
                    ee= temp;
                }
            }
            temp=temp->next;
        }
        ee->next=NULL;
        oe->next= es;
        return os;
        
    }
};
