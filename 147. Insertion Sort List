/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* insertionSortList(ListNode* head) {
       if (head==NULL)  return head;
        if (head->next==NULL)   return head;
        
        head->next=insertionSortList(head->next);
        
        ListNode * temp= head->next,*newhead= head,*prev;
        bool condi=false;
        if (head->val> temp->val)
        {
            newhead= temp;
        }
        while( temp && temp->val<head->val)
        {
            prev= temp;
            temp= temp->next;
            condi=true;
        }
        if (condi)
        {
            prev->next=head;
            head->next= temp;
        }
        return newhead;
        
    }
};
